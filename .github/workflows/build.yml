name: Build and publish Docker image to github registry

on:
  push:
    branches: ['change-action-matrix']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  find-out-changes:
    runs-on: ubuntu-latest
    outputs:
      changed_directories: ${{ steps.set-output.outputs.changed_directories }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45.0.2
        with:
          dir_names: true
          json: true
          quotepath: false

      - name: 'Set output in the matrix format'
        id: set-output
        run: echo "changed_directories={\"dir\":${{ steps.changed-files.outputs.all_changed_files }}}" >> "$GITHUB_OUTPUT"

  do-stuff:
    runs-on: ubuntu-latest
    if: ${{ needs.find-out-changes.output.changed_directories != '' }}
    strategy:
      matrix: ${{ fromJson(needs.find-out-changes.outputs.changed_directories)}}
    needs:
      - find-out-changes
    steps:
      - uses: actions/checkout@v4
      - run: echo ${{ matrix.dir }}


  # build-push:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       include:
  #         - dockerfile: ./biopython/Dockerfile
  #           image: ghcr.io/joeyorofino/biopython:1.7.8
  #           context: biopython
  #         - dockerfile: ./samtools/Dockerfile
  #           image: ghcr.io/joeyorofino/samtools:1.20
  #           context: samtools

  #   permissions:
  #     contents: read
  #     packages: write
  #     attestations: write
  #     id-token: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Login to registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
 
  #     - name: Build and push
  #       id: push
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: ./${{ matrix.context }}
  #         file: ${{ matrix.dockerfile }}
  #         push: true
  #         tags: ${{ matrix.image }}